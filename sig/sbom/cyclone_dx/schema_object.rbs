module SBOM
  module CycloneDX
    module SchemaObject
      extend ClassMethods

      # Allows us to shim in custom initializers as-needed for required values
      def initialize: (**untyped) -> void

      def valid?: () -> bool
      def to_json: (*untyped) -> String
      def json_name_for: (Symbol) -> String

      # Inherited from elsewhere
      def to_h: () -> Hash[Symbol, untyped]
      def members: () -> Array[Symbol]

      module ClassMethods
        @json_name_map: Hash[Symbol, String]

        def json_name_for: (Symbol) -> String
        def json_name: (Symbol, String) -> void

        private def concrete_klass: () -> Class
        private def json_name_map: () -> Hash[Symbol, String]
      end
    end
  end
end
