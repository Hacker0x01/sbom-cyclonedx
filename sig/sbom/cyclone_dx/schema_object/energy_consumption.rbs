module SBOM
  module CycloneDX
    class EnergyConsumption < ::Struct[untyped]
      def self.new: (
        activity: String,
        energy_providers: Array[EnergyProvider],
        activity_energy_cost: EnergyMeasure,
        ?co2_cost_equivalent: CO2Measure?,
        ?co2_cost_offset: CO2Measure?,
        ?properties: Array[Property]?
      ) -> instance

      def self.[]: (
        activity: String,
        energy_providers: Array[EnergyProvider],
        activity_energy_cost: EnergyMeasure,
        ?co2_cost_equivalent: CO2Measure?,
        ?co2_cost_offset: CO2Measure?,
        ?properties: Array[Property]?
      ) -> instance

      def self.keyword_init?: () -> true

      def self.members: () -> [ :activity, :energy_providers, :activity_energy_cost, :co2_cost_equivalent, :co2_cost_offset, :properties ]

      def members: () -> [ :activity, :energy_providers, :activity_energy_cost, :co2_cost_equivalent, :co2_cost_offset, :properties ]

      def initialize: (
        activity: String,
        energy_providers: Array[EnergyProvider],
        activity_energy_cost: EnergyMeasure,
        ?co2_cost_equivalent: CO2Measure?,
        ?co2_cost_offset: CO2Measure?,
        ?properties: Array[Property]?
      ) -> void

      attr_accessor activity: String

      attr_accessor energy_providers: Array[EnergyProvider]

      attr_accessor activity_energy_cost: EnergyMeasure

      attr_accessor co2_cost_equivalent: CO2Measure?

      attr_accessor co2_cost_offset: CO2Measure?

      attr_accessor properties: Array[Property]?

      include SBOM::CycloneDX::SchemaObject

      extend SBOM::CycloneDX::SchemaObject::ClassMethods
    end
  end
end
