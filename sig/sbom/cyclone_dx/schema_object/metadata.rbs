module SBOM
  module CycloneDX
    class Metadata < ::Struct[untyped]
      def self.new: (?timestamp: untyped, ?lifecycles: untyped, ?tools: untyped, ?manufacturer: untyped, ?authors: untyped, ?component: untyped, ?manufacture: untyped, ?supplier: untyped, ?licenses: untyped, ?properties: untyped) -> instance

      def self.[]: (?timestamp: untyped, ?lifecycles: untyped, ?tools: untyped, ?manufacturer: untyped, ?authors: untyped, ?component: untyped, ?manufacture: untyped, ?supplier: untyped, ?licenses: untyped, ?properties: untyped) -> instance

      def self.keyword_init?: () -> true

      def self.members: () -> [ :timestamp, :lifecycles, :tools, :manufacturer, :authors, :component, :manufacture, :supplier, :licenses, :properties ]

      def members: () -> [ :timestamp, :lifecycles, :tools, :manufacturer, :authors, :component, :manufacture, :supplier, :licenses, :properties ]

      attr_accessor timestamp: untyped

      attr_accessor lifecycles: untyped

      attr_accessor tools: untyped

      attr_accessor manufacturer: untyped

      attr_accessor authors: untyped

      attr_accessor component: untyped

      attr_accessor manufacture: untyped

      attr_accessor supplier: untyped

      attr_accessor licenses: untyped

      attr_accessor properties: untyped

      include SBOM::CycloneDX::SchemaObject

      extend SBOM::CycloneDX::SchemaObject::ClassMethods
    end
  end
end
