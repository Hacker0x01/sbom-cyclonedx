module SBOM
  module CycloneDX
    class Volume < ::Struct[untyped]
      def self.new: (
        ?uid: String?,
        ?name: String?,
        ?mode: String?,
        ?path: String?,
        ?size_allocated: String?,
        ?persistent: bool?,
        ?remote: bool?,
        ?properties: Array[Property]?
      ) -> instance

      def self.[]: (
        ?uid: String?,
        ?name: String?,
        ?mode: String?,
        ?path: String?,
        ?size_allocated: String?,
        ?persistent: bool?,
        ?remote: bool?,
        ?properties: Array[Property]?
      ) -> instance

      def self.keyword_init?: () -> true

      def self.members: () -> [ :uid, :name, :mode, :path, :size_allocated, :persistent, :remote, :properties ]

      def members: () -> [ :uid, :name, :mode, :path, :size_allocated, :persistent, :remote, :properties ]

      def initialize: (
        ?uid: String?,
        ?name: String?,
        ?mode: String?,
        ?path: String?,
        ?size_allocated: String?,
        ?persistent: bool?,
        ?remote: bool?,
        ?properties: Array[Property]?
      ) -> void

      attr_accessor uid: String?

      attr_accessor name: String?

      attr_accessor mode: String?

      attr_accessor path: String?

      attr_accessor size_allocated: String?

      attr_accessor persistent: bool?

      attr_accessor remote: bool?

      attr_accessor properties: Array[Property]?

      include SBOM::CycloneDX::SchemaObject

      extend SBOM::CycloneDX::SchemaObject::ClassMethods
    end
  end
end
