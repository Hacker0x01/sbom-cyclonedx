module SBOM
  module CycloneDX
    class Output < ::Struct[untyped]
      def self.new: (
        type: String,
        resource: ResourceReferenceChoice,
        ?source: ResourceReferenceChoice?,
        ?target: ResourceReferenceChoice?,
        ?data: Attachment?,
        ?environment_vars: Array[Property | String]?,
        ?properties: Array[Property]?
      ) -> instance | (
        type: String,
        data: Attachment,
        ?source: ResourceReferenceChoice?,
        ?target: ResourceReferenceChoice?,
        ?resource: ResourceReferenceChoice?,
        ?environment_vars: Array[Property | String]?,
        ?properties: Array[Property]?
      ) -> instance | (
        type: String,
        environment_vars: Array[Property | String],
        ?source: ResourceReferenceChoice?,
        ?target: ResourceReferenceChoice?,
        ?resource: ResourceReferenceChoice?,
        ?data: Attachment?,
        ?properties: Array[Property]?
      ) -> instance

      def self.[]: (
        type: String,
        resource: ResourceReferenceChoice,
        ?source: ResourceReferenceChoice?,
        ?target: ResourceReferenceChoice?,
        ?data: Attachment?,
        ?environment_vars: Array[Property | String]?,
        ?properties: Array[Property]?
      ) -> instance | (
        type: String,
        data: Attachment,
        ?source: ResourceReferenceChoice?,
        ?target: ResourceReferenceChoice?,
        ?resource: ResourceReferenceChoice?,
        ?environment_vars: Array[Property | String]?,
        ?properties: Array[Property]?
      ) -> instance | (
        type: String,
        environment_vars: Array[Property | String],
        ?source: ResourceReferenceChoice?,
        ?target: ResourceReferenceChoice?,
        ?resource: ResourceReferenceChoice?,
        ?data: Attachment?,
        ?properties: Array[Property]?
      ) -> instance

      def self.keyword_init?: () -> true

      def self.members: () -> [ :type, :source, :target, :resource, :data, :environment_vars, :properties ]

      def members: () -> [ :type, :source, :target, :resource, :data, :environment_vars, :properties ]

      def initialize: (
        type: String,
        resource: ResourceReferenceChoice,
        ?source: ResourceReferenceChoice?,
        ?target: ResourceReferenceChoice?,
        ?data: Attachment?,
        ?environment_vars: Array[Property | String]?,
        ?properties: Array[Property]?
      ) -> void | (
        type: String,
        data: Attachment,
        ?source: ResourceReferenceChoice?,
        ?target: ResourceReferenceChoice?,
        ?resource: ResourceReferenceChoice?,
        ?environment_vars: Array[Property | String]?,
        ?properties: Array[Property]?
      ) -> void | (
        type: String,
        environment_vars: Array[Property | String],
        ?source: ResourceReferenceChoice?,
        ?target: ResourceReferenceChoice?,
        ?resource: ResourceReferenceChoice?,
        ?data: Attachment?,
        ?properties: Array[Property]?
      ) -> void

      attr_accessor type: String

      attr_accessor source: ResourceReferenceChoice?

      attr_accessor target: ResourceReferenceChoice?

      attr_accessor resource: ResourceReferenceChoice?

      attr_accessor data: Attachment?

      attr_accessor environment_vars: Array[Property | String]?

      attr_accessor properties: Array[Property]?

      include SBOM::CycloneDX::SchemaObject

      extend SBOM::CycloneDX::SchemaObject::ClassMethods
    end
  end
end
