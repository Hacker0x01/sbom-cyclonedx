module SBOM
  module CycloneDX
    class Vulnerability < ::Struct[untyped]
      def self.new: (
        ?bom_ref: String?,
        ?id: String?,
        ?source: VulnerabilitySource?,
        ?references: Array[Reference]?,
        ?ratings: Array[Rating]?,
        ?cwes: Array[Integer]?,
        ?description: String?,
        ?detail: String?,
        ?recommendation: String?,
        ?workaround: String?,
        ?proof_of_concept: ProofOfConcept?,
        ?advisories: Array[Advisory]?,
        ?created: dateTimeString?,
        ?published: dateTimeString?,
        ?updated: dateTimeString?,
        ?rejected: dateTimeString?,
        ?credits: Credits?,
        ?tools: Tools?,
        ?analysis: Analysis?,
        ?affects: Array[Affects]?,
        ?properties: Array[Property]?
      ) -> instance

      def self.[]: (
        ?bom_ref: String?,
        ?id: String?,
        ?source: VulnerabilitySource?,
        ?references: Array[Reference]?,
        ?ratings: Array[Rating]?,
        ?cwes: Array[Integer]?,
        ?description: String?,
        ?detail: String?,
        ?recommendation: String?,
        ?workaround: String?,
        ?proof_of_concept: ProofOfConcept?,
        ?advisories: Array[Advisory]?,
        ?created: dateTimeString?,
        ?published: dateTimeString?,
        ?updated: dateTimeString?,
        ?rejected: dateTimeString?,
        ?credits: Credits?,
        ?tools: Tools?,
        ?analysis: Analysis?,
        ?affects: Array[Affects]?,
        ?properties: Array[Property]?
      ) -> instance

      def self.keyword_init?: () -> true

      def self.members: () -> [ :bom_ref, :id, :source, :references, :ratings, :cwes, :description, :detail, :recommendation, :workaround, :proof_of_concept, :advisories, :created, :published, :updated, :rejected, :credits, :tools, :analysis, :affects, :properties ]

      def members: () -> [ :bom_ref, :id, :source, :references, :ratings, :cwes, :description, :detail, :recommendation, :workaround, :proof_of_concept, :advisories, :created, :published, :updated, :rejected, :credits, :tools, :analysis, :affects, :properties ]

      attr_accessor bom_ref: String?

      attr_accessor id: String?

      attr_accessor source: VulnerabilitySource?

      attr_accessor references: Array[Reference]?

      attr_accessor ratings: Array[Rating]?

      attr_accessor cwes: Array[Integer]?

      attr_accessor description: String?

      attr_accessor detail: String?

      attr_accessor recommendation: String?

      attr_accessor workaround: String?

      attr_accessor proof_of_concept: ProofOfConcept?

      attr_accessor advisories: Array[Advisory]?

      attr_accessor created: dateTimeString?

      attr_accessor published: dateTimeString?

      attr_accessor updated: dateTimeString?

      attr_accessor rejected: dateTimeString?

      attr_accessor credits: Credits?

      attr_accessor tools: Tools?

      attr_accessor analysis: Analysis?

      attr_accessor affects: Array[Affects]?

      attr_accessor properties: Array[Property]?

      include SBOM::CycloneDX::SchemaObject

      extend SBOM::CycloneDX::SchemaObject::ClassMethods

      class Analysis < ::Struct[untyped]
        def self.new: (
          ?state: String?,
          ?justification: String?,
          ?response: Array[String]?,
          ?detail: String?,
          ?first_issued: dateTimeString?,
          ?last_updated: dateTimeString?
        ) -> instance

        def self.[]: (
          ?state: String?,
          ?justification: String?,
          ?response: Array[String]?,
          ?detail: String?,
          ?first_issued: dateTimeString?,
          ?last_updated: dateTimeString?
        ) -> instance

        def self.keyword_init?: () -> true

        def self.members: () -> [ :state, :justification, :response, :detail, :first_issued, :last_updated ]

        def members: () -> [ :state, :justification, :response, :detail, :first_issued, :last_updated ]

        attr_accessor state: String?

        attr_accessor justification: String?

        attr_accessor response: Array[String]?

        attr_accessor detail: String?

        attr_accessor first_issued: dateTimeString?

        attr_accessor last_updated: dateTimeString?

        include SBOM::CycloneDX::SchemaObject

        extend SBOM::CycloneDX::SchemaObject::ClassMethods
      end

      class Affects < ::Struct[untyped]
        def self.new: (
          ref: String,
          ?versions: Array[Version]?
        ) -> instance

        def self.[]: (
          ref: String,
          ?versions: Array[Version]?
        ) -> instance

        def self.keyword_init?: () -> true

        def self.members: () -> [ :ref, :version ]

        def members: () -> [ :ref, :version ]

        def initialize: (
          ref: String,
          ?versions: Array[Version]?
        ) -> void

        attr_accessor ref: String

        attr_accessor versions: Array[Version]?

        include SBOM::CycloneDX::SchemaObject

        extend SBOM::CycloneDX::SchemaObject::ClassMethods
      end

      class Credits < ::Struct[untyped]
        def self.new: (
          ?organizations: Array[OrganizationalEntity]?,
          ?individuals: Array[OrganizationalContact]?
        ) -> instance

        def self.[]: (
          ?organizations: Array[OrganizationalEntity]?,
          ?individuals: Array[OrganizationalContact]?
        ) -> instance

        def self.keyword_init?: () -> true

        def self.members: () -> [ :organizations, :individuals ]

        def members: () -> [ :organizations, :individuals ]

        attr_accessor organizations: Array[OrganizationalEntity]?

        attr_accessor individuals: Array[OrganizationalContact]?

        include SBOM::CycloneDX::SchemaObject

        extend SBOM::CycloneDX::SchemaObject::ClassMethods
      end

      class ProofOfConcept < ::Struct[untyped]
        def self.new: (
          ?reproduction_steps: String?,
          ?environment: String?,
          ?supporting_material: Array[String]?
        ) -> instance

        def self.[]: (
          ?reproduction_steps: String?,
          ?environment: String?,
          ?supporting_material: Array[String]?
        ) -> instance

        def self.keyword_init?: () -> true

        def self.members: () -> [ :reproduction_steps, :environment, :supporting_material ]

        def members: () -> [ :reproduction_steps, :environment, :supporting_material ]

        attr_accessor reproduction_steps: String?

        attr_accessor environment: String?

        attr_accessor supporting_material: Array[String]?

        include SBOM::CycloneDX::SchemaObject

        extend SBOM::CycloneDX::SchemaObject::ClassMethods
      end

      class Reference < ::Struct[untyped]
        def self.new: (
          id: String,
          source: VulnerabilitySource
        ) -> instance

        def self.[]: (
          id: String,
          source: VulnerabilitySource
        ) -> instance

        def self.keyword_init?: () -> true

        def self.members: () -> [ :id, :source ]

        def members: () -> [ :id, :source ]

        def initialize: (
          id: String,
          source: VulnerabilitySource
        ) -> void

        attr_accessor id: String

        attr_accessor source: VulnerabilitySource

        include SBOM::CycloneDX::SchemaObject

        extend SBOM::CycloneDX::SchemaObject::ClassMethods
      end
    end
  end
end
