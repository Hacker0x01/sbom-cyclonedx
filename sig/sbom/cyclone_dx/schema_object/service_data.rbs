module SBOM
  module CycloneDX
    class ServiceData < ::Struct[untyped]
      def self.new: (
        flow: String,
        classification: String,
        source: uriString | String,
        destination: uriString | String,
        ?name: String?,
        ?description: String?,
        ?governance: DataGovernance?
      ) -> instance

      def self.[]: (
        flow: String,
        classification: String,
        source: uriString | String,
        destination: uriString | String,
        ?name: String?,
        ?description: String?,
        ?governance: DataGovernance?
      ) -> instance

      def self.keyword_init?: () -> true

      def self.members: () -> [ :flow, :classification, :name, :description, :governance, :source, :destination ]

      def members: () -> [ :flow, :classification, :name, :description, :governance, :source, :destination ]

      def initialize: (
        flow: String,
        classification: String,
        source: uriString | String,
        destination: uriString | String,
        ?name: String?,
        ?description: String?,
        ?governance: DataGovernance?
      ) -> void

      attr_accessor flow: String

      attr_accessor classification: String

      attr_accessor name: String?

      attr_accessor description: String?

      attr_accessor governance: DataGovernance?

      attr_accessor source: uriString | String

      attr_accessor destination: uriString | String

      include SBOM::CycloneDX::SchemaObject

      extend SBOM::CycloneDX::SchemaObject::ClassMethods
    end
  end
end
