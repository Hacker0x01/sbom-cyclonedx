module SBOM
  module CycloneDX
    module Validator
      class UnionValidator < BaseValidator[fieldValue]
        type unionableValidatorParams =
          fieldTypeLabel
        | [:array, arrayValidatorParams]
        | [:boolean, booleanValidatorParams]
        | [:date_time, dateTimeValidatorParams]
        | [:email_address, emailAddressValidatorParams]
        | [:float, floatValidatorParams]
        | [:integer, integerValidatorParams]
        | [singleton(SBOM::CycloneDX::Record::Base), recordValidatorParams]
        | [:string, stringValidatorParams]
        | [:uri, uriValidatorParams]

        @nested_validators: Array[BaseValidator[untyped]]

        def initialize: (of: Array[unionableValidatorParams], ?required: bool) -> void
        def valid?: (untyped) -> bool
      end
    end
  end
end
