module SBOM
  module CycloneDX
    module Record
      class Component < Base
        class Pedigree < Base
          def initialize: (?ancestors: Array[Component]?, ?descendants: Array[Component]?, ?variants: Array[Component]?, ?commits: Array[Commit]?, ?patches: Array[Patch]?, ?notes: String?) -> void

          def ancestors: () -> Array[Component]?
          def ancestors=: (Array[Component]?) -> Array[Component]?
          def ancestors?: () -> bool
          def ancestors_valid?: () -> bool

          def descendants: () -> Array[Component]?
          def descendants=: (Array[Component]?) -> Array[Component]?
          def descendants?: () -> bool
          def descendants_valid?: () -> bool

          def variants: () -> Array[Component]?
          def variants=: (Array[Component]?) -> Array[Component]?
          def variants?: () -> bool
          def variants_valid?: () -> bool

          def commits: () -> Array[Commit]?
          def commits=: (Array[Commit]?) -> Array[Commit]?
          def commits?: () -> bool
          def commits_valid?: () -> bool

          def patches: () -> Array[Patch]?
          def patches=: (Array[Patch]?) -> Array[Patch]?
          def patches?: () -> bool
          def patches_valid?: () -> bool

          def notes: () -> String?
          def notes=: (String?) -> String?
          def notes?: () -> bool
          def notes_valid?: () -> bool
        end

        def initialize: (type: String, ?mime_type: String?, ?bom_ref: String?, ?supplier: OrganizationalEntity?, ?manufacturer: OrganizationalEntity?, ?authors: Array[OrganizationalContact]?, ?publisher: String?, ?group: String?, name: String, ?version: String?, ?description: String?, ?scope: String?, ?hashes: Array[HashData]?, ?licenses: Array[LicenseChoice::licenseChoice]?, ?copyright: String?, ?cpe: String?, ?purl: String?, ?omnibor_id: Array[String]?, ?swhid: Array[String]?, ?swid: SWID?, ?modified: bool?, ?pedigree: Pedigree?, ?external_references: Array[ExternalReference]?, ?components: Array[Component]?, ?evidence: ComponentEvidence?, ?release_notes: ReleaseNotes?, ?model_card: ModelCard?, ?data: Array[ComponentData]?, ?crypto_properties: CryptoProperties?, ?properties: Array[Property]?, ?tags: Array[String]?, ?signature: Signature::signatureChoice?) -> void

        def type: () -> String
        def type=: (String) -> String
        def type?: () -> bool
        def type_valid?: () -> bool

        def mime_type: () -> String?
        def mime_type=: (String?) -> String?
        def mime_type?: () -> bool
        def mime_type_valid?: () -> bool

        def bom_ref: () -> String?
        def bom_ref=: (String?) -> String?
        def bom_ref?: () -> bool
        def bom_ref_valid?: () -> bool

        def supplier: () -> OrganizationalEntity?
        def supplier=: (OrganizationalEntity?) -> OrganizationalEntity?
        def supplier?: () -> bool
        def supplier_valid?: () -> bool

        def manufacturer: () -> OrganizationalEntity?
        def manufacturer=: (OrganizationalEntity?) -> OrganizationalEntity?
        def manufacturer?: () -> bool
        def manufacturer_valid?: () -> bool

        def authors: () -> Array[OrganizationalContact]?
        def authors=: (Array[OrganizationalContact]?) -> Array[OrganizationalContact]?
        def authors?: () -> bool
        def authors_valid?: () -> bool

        def publisher: () -> String?
        def publisher=: (String?) -> String?
        def publisher?: () -> bool
        def publisher_valid?: () -> bool

        def group: () -> String?
        def group=: (String?) -> String?
        def group?: () -> bool
        def group_valid?: () -> bool

        def name: () -> String
        def name=: (String) -> String
        def name?: () -> bool
        def name_valid?: () -> bool

        def version: () -> String?
        def version=: (String?) -> String?
        def version?: () -> bool
        def version_valid?: () -> bool

        def description: () -> String?
        def description=: (String?) -> String?
        def description?: () -> bool
        def description_valid?: () -> bool

        def scope: () -> String?
        def scope=: (String?) -> String?
        def scope?: () -> bool
        def scope_valid?: () -> bool

        def hashes: () -> Array[HashData]?
        def hashes=: (Array[HashData]?) -> Array[HashData]?
        def hashes?: () -> bool
        def hashes_valid?: () -> bool

        def licenses: () -> Array[LicenseChoice::licenseChoice]?
        def licenses=: (Array[LicenseChoice::licenseChoice]?) -> Array[LicenseChoice::licenseChoice]?
        def licenses?: () -> bool
        def licenses_valid?: () -> bool

        def copyright: () -> String?
        def copyright=: (String?) -> String?
        def copyright?: () -> bool
        def copyright_valid?: () -> bool

        def cpe: () -> String?
        def cpe=: (String?) -> String?
        def cpe?: () -> bool
        def cpe_valid?: () -> bool

        def purl: () -> String?
        def purl=: (String?) -> String?
        def purl?: () -> bool
        def purl_valid?: () -> bool

        def omnibor_id: () -> Array[String]?
        def omnibor_id=: (Array[String]?) -> Array[String]?
        def omnibor_id?: () -> bool
        def omnibor_id_valid?: () -> bool

        def swhid: () -> Array[String]?
        def swhid=: (Array[String]?) -> Array[String]?
        def swhid?: () -> bool
        def swhid_valid?: () -> bool

        def swid: () -> SWID?
        def swid=: (SWID?) -> SWID?
        def swid?: () -> bool
        def swid_valid?: () -> bool

        def modified: () -> bool?
        def modified=: (bool?) -> bool?
        def modified?: () -> bool
        def modified_valid?: () -> bool

        def pedigree: () -> Pedigree?
        def pedigree=: (Pedigree?) -> Pedigree?
        def pedigree?: () -> bool
        def pedigree_valid?: () -> bool

        def external_references: () -> Array[ExternalReference]?
        def external_references=: (Array[ExternalReference]?) -> Array[ExternalReference]?
        def external_references?: () -> bool
        def external_references_valid?: () -> bool

        def components: () -> Array[Component]?
        def components=: (Array[Component]?) -> Array[Component]?
        def components?: () -> bool
        def components_valid?: () -> bool

        def evidence: () -> ComponentEvidence?
        def evidence=: (ComponentEvidence?) -> ComponentEvidence?
        def evidence?: () -> bool
        def evidence_valid?: () -> bool

        def release_notes: () -> ReleaseNotes?
        def release_notes=: (ReleaseNotes?) -> ReleaseNotes?
        def release_notes?: () -> bool
        def release_notes_valid?: () -> bool

        def model_card: () -> ModelCard?
        def model_card=: (ModelCard?) -> ModelCard?
        def model_card?: () -> bool
        def model_card_valid?: () -> bool

        def data: () -> Array[ComponentData]?
        def data=: (Array[ComponentData]?) -> Array[ComponentData]?
        def data?: () -> bool
        def data_valid?: () -> bool

        def crypto_properties: () -> CryptoProperties?
        def crypto_properties=: (CryptoProperties?) -> CryptoProperties?
        def crypto_properties?: () -> bool
        def crypto_properties_valid?: () -> bool

        def properties: () -> Array[Property]?
        def properties=: (Array[Property]?) -> Array[Property]?
        def properties?: () -> bool
        def properties_valid?: () -> bool

        def tags: () -> Array[String]?
        def tags=: (Array[String]?) -> Array[String]?
        def tags?: () -> bool
        def tags_valid?: () -> bool

        def signature: () -> Signature::signatureChoice?
        def signature=: (Signature::signatureChoice?) -> Signature::signatureChoice?
        def signature?: () -> bool
        def signature_valid?: () -> bool
      end
    end
  end
end
