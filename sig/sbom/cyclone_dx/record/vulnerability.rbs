module SBOM
  module CycloneDX
    module Record
      class Vulnerability < Base
        class Analysis < Base
          def initialize: (?state: String?, ?justification: String?, ?response: Array[String]?, ?detail: String?, ?first_issued: dateTime?, ?last_updated: dateTime?) -> void

          @state: String?
          def state: () -> String?
          def state=: (String?) -> String?
          def state?: () -> bool
          def state_valid?: () -> bool

          @justification: String?
          def justification: () -> String?
          def justification=: (String?) -> String?
          def justification?: () -> bool
          def justification_valid?: () -> bool

          @response: Array[String]?
          def response: () -> Array[String]?
          def response=: (Array[String]?) -> Array[String]?
          def response?: () -> bool
          def response_valid?: () -> bool

          @detail: String?
          def detail: () -> String?
          def detail=: (String?) -> String?
          def detail?: () -> bool
          def detail_valid?: () -> bool

          @first_issued: dateTime?
          def first_issued: () -> dateTime?
          def first_issued=: (dateTime?) -> dateTime?
          def first_issued?: () -> bool
          def first_issued_valid?: () -> bool

          @last_updated: dateTime?
          def last_updated: () -> dateTime?
          def last_updated=: (dateTime?) -> dateTime?
          def last_updated?: () -> bool
          def last_updated_valid?: () -> bool
        end

        class Affects < Base
          def initialize: (ref: String, ?versions: Array[Version]?) -> void

          @ref: String
          def ref: () -> String
          def ref=: (String) -> String
          def ref?: () -> bool
          def ref_valid?: () -> bool

          @versions: Array[Version]?
          def versions: () -> Array[Version]?
          def versions=: (Array[Version]?) -> Array[Version]?
          def versions?: () -> bool
          def versions_valid?: () -> bool
        end

        class Credits < Base
          def initialize: (?organizations: Array[OrganizationalEntity]?, ?individuals: Array[OrganizationalContact]?) -> void

          @organizations: Array[OrganizationalEntity]?
          def organizations: () -> Array[OrganizationalEntity]?
          def organizations=: (Array[OrganizationalEntity]?) -> Array[OrganizationalEntity]?
          def organizations?: () -> bool
          def organizations_valid?: () -> bool

          @individuals: Array[OrganizationalContact]?
          def individuals: () -> Array[OrganizationalContact]?
          def individuals=: (Array[OrganizationalContact]?) -> Array[OrganizationalContact]?
          def individuals?: () -> bool
          def individuals_valid?: () -> bool
        end

        class ProofOfConcept < Base
          def initialize: (?reproduction_steps: String?, ?environment: String?, ?supporting_material: Array[Attachment]?) -> void

          @reproduction_steps: String?
          def reproduction_steps: () -> String?
          def reproduction_steps=: (String?) -> String?
          def reproduction_steps?: () -> bool
          def reproduction_steps_valid?: () -> bool

          @environment: String?
          def environment: () -> String?
          def environment=: (String?) -> String?
          def environment?: () -> bool
          def environment_valid?: () -> bool

          @supporting_material: Array[Attachment]?
          def supporting_material: () -> Array[Attachment]?
          def supporting_material=: (Array[Attachment]?) -> Array[Attachment]?
          def supporting_material?: () -> bool
          def supporting_material_valid?: () -> bool
        end

        class Reference < Base
          def initialize: (id: String, source: VulnerabilitySource) -> void

          @id: String
          def id: () -> String
          def id=: (String) -> String
          def id?: () -> bool
          def id_valid?: () -> bool

          @source: VulnerabilitySource
          def source: () -> VulnerabilitySource
          def source=: (VulnerabilitySource) -> VulnerabilitySource
          def source?: () -> bool
          def source_valid?: () -> bool
        end

        def initialize: (?bom_ref: String?, ?id: String?, ?source: VulnerabilitySource?, ?references: Array[Reference]?, ?ratings: Array[Rating]?, ?cwes: Array[Integer]?, ?description: String?, ?detail: String?, ?recommendation: String?, ?workaround: String?, ?proof_of_concept: ProofOfConcept?, ?advisories: Array[Advisory]?, ?created: dateTime?, ?published: dateTime?, ?updated: dateTime?, ?rejected: dateTime?, ?credits: Credits?, ?tools: Tools?, ?analysis: Analysis?, ?affects: Array[Affects]?, ?properties: Array[Property]?) -> void

        @bom_ref: String?
        def bom_ref: () -> String?
        def bom_ref=: (String?) -> String?
        def bom_ref?: () -> bool
        def bom_ref_valid?: () -> bool

        @id: String?
        def id: () -> String?
        def id=: (String?) -> String?
        def id?: () -> bool
        def id_valid?: () -> bool

        @source: VulnerabilitySource?
        def source: () -> VulnerabilitySource?
        def source=: (VulnerabilitySource?) -> VulnerabilitySource?
        def source?: () -> bool
        def source_valid?: () -> bool

        @references: Array[Reference]?
        def references: () -> Array[Reference]?
        def references=: (Array[Reference]?) -> Array[Reference]?
        def references?: () -> bool
        def references_valid?: () -> bool

        @ratings: Array[Rating]?
        def ratings: () -> Array[Rating]?
        def ratings=: (Array[Rating]?) -> Array[Rating]?
        def ratings?: () -> bool
        def ratings_valid?: () -> bool

        @cwes: Array[Integer]?
        def cwes: () -> Array[Integer]?
        def cwes=: (Array[Integer]?) -> Array[Integer]?
        def cwes?: () -> bool
        def cwes_valid?: () -> bool

        @description: String?
        def description: () -> String?
        def description=: (String?) -> String?
        def description?: () -> bool
        def description_valid?: () -> bool

        @detail: String?
        def detail: () -> String?
        def detail=: (String?) -> String?
        def detail?: () -> bool
        def detail_valid?: () -> bool

        @recommendation: String?
        def recommendation: () -> String?
        def recommendation=: (String?) -> String?
        def recommendation?: () -> bool
        def recommendation_valid?: () -> bool

        @workaround: String?
        def workaround: () -> String?
        def workaround=: (String?) -> String?
        def workaround?: () -> bool
        def workaround_valid?: () -> bool

        @proof_of_concept: ProofOfConcept?
        def proof_of_concept: () -> ProofOfConcept?
        def proof_of_concept=: (ProofOfConcept?) -> ProofOfConcept?
        def proof_of_concept?: () -> bool
        def proof_of_concept_valid?: () -> bool

        @advisories: Array[Advisory]?
        def advisories: () -> Array[Advisory]?
        def advisories=: (Array[Advisory]?) -> Array[Advisory]?
        def advisories?: () -> bool
        def advisories_valid?: () -> bool

        @created: dateTime?
        def created: () -> dateTime?
        def created=: (dateTime?) -> dateTime?
        def created?: () -> bool
        def created_valid?: () -> bool

        @published: dateTime?
        def published: () -> dateTime?
        def published=: (dateTime?) -> dateTime?
        def published?: () -> bool
        def published_valid?: () -> bool

        @updated: dateTime?
        def updated: () -> dateTime?
        def updated=: (dateTime?) -> dateTime?
        def updated?: () -> bool
        def updated_valid?: () -> bool

        @rejected: dateTime?
        def rejected: () -> dateTime?
        def rejected=: (dateTime?) -> dateTime?
        def rejected?: () -> bool
        def rejected_valid?: () -> bool

        @credits: Credits?
        def credits: () -> Credits?
        def credits=: (Credits?) -> Credits?
        def credits?: () -> bool
        def credits_valid?: () -> bool

        @tools: Tools?
        def tools: () -> Tools?
        def tools=: (Tools?) -> Tools?
        def tools?: () -> bool
        def tools_valid?: () -> bool

        @analysis: Analysis?
        def analysis: () -> Analysis?
        def analysis=: (Analysis?) -> Analysis?
        def analysis?: () -> bool
        def analysis_valid?: () -> bool

        @affects: Array[Affects]?
        def affects: () -> Array[Affects]?
        def affects=: (Array[Affects]?) -> Array[Affects]?
        def affects?: () -> bool
        def affects_valid?: () -> bool

        @properties: Array[Property]?
        def properties: () -> Array[Property]?
        def properties=: (Array[Property]?) -> Array[Property]?
        def properties?: () -> bool
        def properties_valid?: () -> bool
      end
    end
  end
end
