# frozen_string_literal: true

require_relative "../enum"
require_relative "../pattern"
require_relative "base"
require_relative "advisory"
require_relative "attachment"
require_relative "organizational_contact"
require_relative "organizational_entity"
require_relative "property"
require_relative "rating"
require_relative "tools"
require_relative "version"
require_relative "vulnerability_source"

# Vulnerability - Defines a weakness in a component or service that could be exploited or triggered by a threat source.
module SBOM
  module CycloneDX
    module Record
      # Schema name: Vulnerability
      class Vulnerability < Base
        # Schema name: Analysis
        class Analysis < Base
          prop :state, :string, enum: Enum::IMPACT_ANALYSIS_STATE
          prop :justification, :string, enum: Enum::IMPACT_ANALYSIS_JUSTIFICATION
          # Response - A response to the vulnerability by the manufacturer, supplier, or project responsible for the affected component or service. More than one response is allowed. Responses are strongly encouraged for vulnerabilities where the analysis state is exploitable.
          prop :response, :array, items: [:string, enum: Enum::RESPONSE]
          # Detail - Detailed description of the impact including methods used during assessment. If a vulnerability is not exploitable, this field should include specific details on why the component or service is not impacted by this vulnerability.
          prop :detail, :string
          # First Issued - The date and time (timestamp) when the analysis was first issued.
          prop :first_issued, :date_time
          # Last Updated - The date and time (timestamp) when the analysis was last updated.
          prop :last_updated, :date_time
        end

        # Schema name: Affects
        class Affects < Base
          # Reference - References a component or service by the objects bom-ref
          prop :ref, :string, pattern: Pattern::REF_OR_CDX_URN, required: true
          # Versions - Zero or more individual versions or range of versions.
          prop :versions, :array, items: Version
        end

        # Schema name: Credits
        class Credits < Base
          # Organizations - The organizations credited with vulnerability discovery.
          prop :organizations, :array, items: OrganizationalEntity
          # Individuals - The individuals, not associated with organizations, that are credited with vulnerability discovery.
          prop :individuals, :array, items: OrganizationalContact
        end

        # Schema name: ProofOfConcept
        class ProofOfConcept < Base
          # Steps to Reproduce - Precise steps to reproduce the vulnerability.
          prop :reproduction_steps, :string
          # Environment - A description of the environment in which reproduction was possible.
          prop :environment, :string
          # Supporting Material - Supporting material that helps in reproducing or understanding how reproduction is possible. This may include screenshots, payloads, and PoC exploit code.
          prop :supporting_material, :array, items: Attachment
        end

        # Schema name: Reference
        class Reference < Base
          # ID - An identifier that uniquely identifies the vulnerability.
          # Examples: "CVE-2021-39182", "GHSA-35m5-8cvj-8783", "SNYK-PYTHON-ENROCRYPT-1912876"
          prop :id, :string, required: true
          # The source that published the vulnerability.
          prop :source, VulnerabilitySource, required: true
        end

        # BOM Reference - An optional identifier which can be used to reference the vulnerability elsewhere in the BOM. Every bom-ref must be unique within the BOM. Value SHOULD not start with the BOM-Link intro 'urn:cdx:' to avoid conflicts with BOM-Links.
        prop :bom_ref, :string, pattern: Pattern::REF_LINK, json_name: "bom-ref"
        # ID - The identifier that uniquely identifies the vulnerability.
        # Examples: "CVE-2021-39182", "GHSA-35m5-8cvj-8783", "SNYK-PYTHON-ENROCRYPT-1912876"
        prop :id, :string
        # The source that published the vulnerability.
        prop :source, VulnerabilitySource
        # References - Zero or more pointers to vulnerabilities that are the equivalent of the vulnerability specified. Often times, the same vulnerability may exist in multiple sources of vulnerability intelligence, but have different identifiers. References provide a way to correlate vulnerabilities across multiple sources of vulnerability intelligence.
        prop :references, :array, items: Reference
        # Ratings - List of vulnerability ratings
        prop :ratings, :array, items: Rating
        # CWEs - List of Common Weaknesses Enumerations (CWEs) codes that describes this vulnerability.
        # Contains integer representations of Common Weaknesses Enumerations (CWE). For example 399 (of https://cwe.mitre.org/data/definitions/399.html)
        # Example: [399]
        prop :cwes, :array, items: [:integer, minimum: 1]
        # Description - A description of the vulnerability as provided by the source.
        prop :description, :string
        # Details - If available, an in-depth description of the vulnerability as provided by the source organization. Details often include information useful in understanding root cause.
        prop :detail, :string
        # Recommendation - Recommendations of how the vulnerability can be remediated or mitigated.
        prop :recommendation, :string
        # Workarounds - A bypass, usually temporary, of the vulnerability that reduces its likelihood and/or impact. Workarounds often involve changes to configuration or deployments.
        prop :workaround, :string
        # Proof of Concept - Evidence used to reproduce the vulnerability.
        prop :proof_of_concept, ProofOfConcept
        # Advisories - Published advisories of the vulnerability if provided.
        prop :advisories, :array, items: Advisory
        # Created - The date and time (timestamp) when the vulnerability record was created in the vulnerability database.
        prop :created, :date_time
        # Published - The date and time (timestamp) when the vulnerability record was first published.
        prop :published, :date_time
        # Updated - The date and time (timestamp) when the vulnerability record was last updated.
        prop :updated, :date_time
        # Rejected - The date and time (timestamp) when the vulnerability record was rejected (if applicable).
        prop :rejected, :date_time
        # Credits - Individuals or organizations credited with the discovery of the vulnerability.
        prop :credits, Credits
        # Tools - The tool(s) used to identify, confirm, or score the vulnerability.
        prop :tools, Tools
        # Impact Analysis - An assessment of the impact and exploitability of the vulnerability.
        prop :analysis, Analysis
        # Affects - The components or services that are affected by the vulnerability.
        prop :affects, :array, items: Affects, unique: true
        # Properties - Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values. Property names of interest to the general public are encouraged to be registered in the [CycloneDX Property Taxonomy](https://github.com/CycloneDX/cyclonedx-property-taxonomy). Formal registration is optional.
        prop :properties, :array, items: Property
      end
    end
  end
end
