# frozen_string_literal: true
# rbs_inline: enabled

# Vulnerability - Defines a weakness in a component or service that could be exploited or triggered by a threat source.
module Sbom
  module Cyclonedx
    class Vulnerability < SchemaObject
      # BOM Reference - An optional identifier which can be used to reference the vulnerability elsewhere in the BOM. Every bom-ref must be unique within the BOM. Value SHOULD not start with the BOM-Link intro 'urn:cdx:' to avoid conflicts with BOM-Links.
      attr_accessor :bom_ref #: RefLink

      # ID - The identifier that uniquely identifies the vulnerability.
      # Examples: "CVE-2021-39182", "GHSA-35m5-8cvj-8783", "SNYK-PYTHON-ENROCRYPT-1912876"
      attr_accessor :id #: String

      # The source that published the vulnerability.
      attr_accessor :source #: VulnerabilitySource

      # References - Zero or more pointers to vulnerabilities that are the equivalent of the vulnerability specified. Often times, the same vulnerability may exist in multiple sources of vulnerability intelligence, but have different identifiers. References provide a way to correlate vulnerabilities across multiple sources of vulnerability intelligence.
      attr_accessor :references #: [Reference]

      # Ratings - List of vulnerability ratings
      attr_accessor :ratings #: [Rating]

      # CWEs - List of Common Weaknesses Enumerations (CWEs) codes that describes this vulnerability.
      # Contains integer representations of Common Weaknesses Enumerations (CWE). For example 399 (of https://cwe.mitre.org/data/definitions/399.html)
      # Example: [399]
      attr_accessor :cwes #: [Integer]

      # Description - A description of the vulnerability as provided by the source.
      attr_accessor :description #: String

      # Details - If available, an in-depth description of the vulnerability as provided by the source organization. Details often include information useful in understanding root cause.
      attr_accessor :detail #: String

      # Recommendation - Recommendations of how the vulnerability can be remediated or mitigated.
      attr_accessor :recommendation #: String

      # Workarounds - A bypass, usually temporary, of the vulnerability that reduces its likelihood and/or impact. Workarounds often involve changes to configuration or deployments.
      attr_accessor :workaround #: String

      # Proof of Concept - Evidence used to reproduce the vulnerability.
      attr_accessor :proof_of_concept #: ProofOfConcept

      # Advisories - Published advisories of the vulnerability if provided.
      attr_accessor :advisories #: [Advisory]

      # Created - The date and time (timestamp) when the vulnerability record was created in the vulnerability database.
      attr_accessor :created #: DateTime

      # Published - The date and time (timestamp) when the vulnerability record was first published.
      attr_accessor :published #: DateTime

      # Updated - The date and time (timestamp) when the vulnerability record was last updated.
      attr_accessor :updated #: DateTime

      # Rejected - The date and time (timestamp) when the vulnerability record was rejected (if applicable).
      attr_accessor :rejected #: DateTime

      # Credits - Individuals or organizations credited with the discovery of the vulnerability.
      attr_accessor :credits #: Credit

      # Tools - The tool(s) used to identify, confirm, or score the vulnerability.
      attr_accessor :tools #: Tools

      # Impact Analysis - An assessment of the impact and exploitability of the vulnerability.
      attr_accessor :analysis #: Analysis

      # Affects - The components or services that are affected by the vulnerability.
      attr_accessor :affects #: [Affect]

      # Properties - Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values. Property names of interest to the general public are encouraged to be registered in the [CycloneDX Property Taxonomy](https://github.com/CycloneDX/cyclonedx-property-taxonomy). Formal registration is optional.
      attr_accessor :properties #: [Property]

      validate :cwes, all: { minimum: 1 }
    end
  end
end
