# frozen_string_literal: true

FactoryBot.define do
  factory :vulnerability, parent: :record, class: "SBOM::CycloneDX::Record::Vulnerability" do
    trait :all_fields do
      bom_ref { generate(:ref_link) }
      id { "CVE-#{rand(2015..2024)}-#{rand(100_000..999_999)}" }
      source { association(:vulnerability_source) }
      references { association_list(:reference) }
      ratings { association_list(:rating) }
      cwes { Array.new(rand(1..3)) { rand(1..999) } }
      description { Faker::Lorem.sentence }
      detail { Faker::Lorem.paragraph }
      recommendation { Faker::Lorem.sentence }
      workaround { Faker::Lorem.sentence }
      proof_of_concept { association(:proof_of_concept) }
      advisories { association_list(:advisory) }
      created { Faker::Time.backward(days: 367) }
      published { created + rand(1..7).days }
      updated { published + rand(1..30).days }
      rejected { updated + rand(1..30).days }
      credits { association(:credits) }
      tools { association(:tools) }
      analysis { association(:analysis) }
      affects { association_list(:affects) }
      properties { association_list(:property) }
    end
  end

  factory :analysis, parent: :record, class: "SBOM::CycloneDX::Record::Vulnerability::Analysis" do
    trait :all_fields do
      state { SBOM::CycloneDX::Enum::IMPACT_ANALYSIS_STATE.sample }
      justification { SBOM::CycloneDX::Enum::IMPACT_ANALYSIS_JUSTIFICATION.sample }
      response { SBOM::CycloneDX::Enum::RESPONSE.sample(rand(1..3)) }
      detail { Faker::Lorem.paragraph }
      first_issued { Faker::Time.backward(days: 367) }
      last_updated { first_issued + rand(1..30).days }
    end
  end

  factory :affects, parent: :record, class: "SBOM::CycloneDX::Record::Vulnerability::Affects" do
    ref { generate(:ref_or_cdx_urn) }

    trait :all_fields do
      versions { association_list(:version) }
    end
  end

  factory :credits, parent: :record, class: "SBOM::CycloneDX::Record::Vulnerability::Credits" do
    trait :all_fields do
      organizations { association_list(:organizational_entity) }
      individuals { association_list(:organizational_contact) }
    end
  end

  factory :proof_of_concept, parent: :record, class: "SBOM::CycloneDX::Record::Vulnerability::ProofOfConcept" do
    trait :all_fields do
      reproduction_steps { Faker::Lorem.paragraph }
      environment { Faker::Lorem.word }
      supporting_material { association_list(:attachment) }
    end
  end

  factory :reference, parent: :record, class: "SBOM::CycloneDX::Record::Vulnerability::Reference" do
    id { "CVE-#{rand(2015..2024)}-#{rand(100_000..999_999)}" }
    source { association(:vulnerability_source) }

    trait :all_fields
  end
end
