.ruby-base:
  tags:
    - runner-small
  image: $RUBY_IMAGE
  cache:
    key:
      files:
        - Gemfile.lock
    paths:
      # - ./vendor
      # - ./.gem_rbs_collection
  before_script:
    - ruby -v
    - apk update && apk --no-cache add --virtual bash git curl curl-dev ruby-dev build-base ruby ruby-io-console ruby-irb ruby-json ruby-etc ruby-bigdecimal ruby-rdoc libffi-dev zlib-dev yaml-dev
    # - bundle config set path ./vendor
    - bundle install --jobs=$(nproc) --retry=3
    - bundle exec rbs collection install
  variables:
    RUBY_IMAGE: ruby:3.3-alpine
lint:
  extends: .ruby-base
  stage: test
  script:
    - bundle exec rubocop
rspec:
  extends: .ruby-base
  stage: test
  script:
    - bundle exec rbs collection update
    - bin/rbs_spec
    - |
      echo "Adjusting junit report based on project_path..."
      sed -i 's|file="\./\([^"]*\)"|file="\./\1"|g' "rspec.xml" || true
      cp "rspec.xml" "$CI_PROJECT_DIR/${CI_JOB_ID}_junit.xml" || true
      echo "Adjusting coverage report based on project_path..."
      sed -i "s|$PWD|$CI_PROJECT_DIR|g" "coverage/coverage.xml" || true
      sed -i 's|filename="\([^"]*\)"|filename="\./\1"|g' "coverage/coverage.xml" || true
      cp "coverage/coverage.xml" "$CI_PROJECT_DIR/${CI_JOB_ID}_cobertura.xml" || true
  coverage: '/LOC\s\(\d+\.\d+%\)\scovered/'
  artifacts:
    when: always
    paths:
      - ${CI_JOB_ID}_junit.xml
      - ${CI_JOB_ID}_cobertura.xml
    reports:
      junit: ${CI_JOB_ID}_junit.xml
      coverage_report:
        coverage_format: cobertura
        path: ${CI_JOB_ID}_cobertura.xml
